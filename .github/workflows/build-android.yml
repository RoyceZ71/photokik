name: Build Android APK

on:
  push:
    branches: [ main, master ]
    paths:
      - 'android/**'
      - '.github/workflows/build-android.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'android/**'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug or release)'
        required: false
        default: 'release'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Clean project
      working-directory: android
      run: ./gradlew clean
      
    - name: Build Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' }}
      working-directory: android
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == '' }}
      working-directory: android
      run: ./gradlew assembleRelease
      
    - name: Upload Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: photokik-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: photokik-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 90
        
    - name: Build AAB (Android App Bundle) for Play Store
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == '' }}
      working-directory: android
      run: ./gradlew bundleRelease
      
    - name: Upload AAB
      if: ${{ github.event.inputs.build_type == 'release' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: photokik-release-aab
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 90
        
    - name: Create Release Summary
      if: success()
      run: |
        echo "## ðŸš€ PhotoKik Android Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“± Build Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **App Name:** PhotoKik" >> $GITHUB_STEP_SUMMARY
        echo "- **Package:** com.mocha.photokik" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** 1.0.0" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** ${{ github.event.inputs.build_type || 'release' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Target SDK:** 34 (Android 14)" >> $GITHUB_STEP_SUMMARY
        echo "- **Min SDK:** 22 (Android 5.1)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“¦ Generated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- APK file ready for testing" >> $GITHUB_STEP_SUMMARY
        echo "- AAB file ready for Google Play Store upload" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### âœ… Ready for Google Play Store!" >> $GITHUB_STEP_SUMMARY
        echo "Download the AAB file from the artifacts and upload it to Google Play Console." >> $GITHUB_STEP_SUMMARY
